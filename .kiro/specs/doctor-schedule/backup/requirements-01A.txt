Page Display and Loading:
WHEN a user navigates to the doctor-schedule page
THE SYSTEM SHALL display the page with header, sidebar, doctors table, and calendar components

WHEN the doctor-schedule page loads
THE SYSTEM SHALL fetch and display user role and username from localStorage in the header

WHEN the doctor-schedule page loads  
THE SYSTEM SHALL automatically load doctors data from the API endpoint /doctors

WHEN the doctor-schedule page loads
THE SYSTEM SHALL automatically load schedules data from the API endpoint /schedules

WHEN the doctor-schedule page loads
THE SYSTEM SHALL render the current month calendar with today's date context

---

User Profile Display and Dropdown:
WHEN the page loads with valid user data
THE SYSTEM SHALL display the user's role in uppercase text and username below it in the header

WHEN the page loads with valid username
THE SYSTEM SHALL create a profile avatar with the first letter of the username and assign a consistent color based on username hash

WHEN a user clicks on the profile avatar
THE SYSTEM SHALL toggle the visibility of the profile dropdown menu

WHEN the profile dropdown is visible and user clicks outside of it
THE SYSTEM SHALL hide the profile dropdown menu

WHEN a user clicks on the Settings option in the profile dropdown
THE SYSTEM SHALL hide the dropdown and show "Settings functionality coming soon!" alert

WHEN a user clicks on the Logout option in the profile dropdown
THE SYSTEM SHALL clear localStorage data (loggedInRole, loggedInUsername, isLoggedIn) and redirect to login.html

---

Sidebar Navigation:
WHEN the page loads
THE SYSTEM SHALL display the sidebar with navigation items and highlight "Doctors" as the active item

WHEN a user clicks on Dashboard nav item
THE SYSTEM SHALL navigate to index.html

WHEN a user clicks on Appointments nav item  
THE SYSTEM SHALL navigate to appointments.html

WHEN a user clicks on Patients nav item
THE SYSTEM SHALL navigate to patients.html

WHEN a user clicks on Laboratory nav item
THE SYSTEM SHALL navigate to laboratory.html

WHEN a user clicks on Prescriptions nav item
THE SYSTEM SHALL navigate to prescriptions.html

WHEN a user clicks on Doctors nav item
THE SYSTEM SHALL navigate to doctor-schedule.html

WHEN the logged in user role is 'admin'
THE SYSTEM SHALL dynamically inject and display an "Accounts" navigation item

WHEN a user with admin role clicks on the Accounts nav item
THE SYSTEM SHALL navigate to accounts.html

---

Doctors Table Display:
WHEN doctors data is successfully loaded from the API
THE SYSTEM SHALL display doctors in a table with columns: Doctor's Name, Specialization, Contact Number

WHEN displaying doctor names in the table
THE SYSTEM SHALL format names as "Dr. [FirstName] [LastName]"

WHEN the contact number is not available for a doctor
THE SYSTEM SHALL display "N/A" in the Contact Number column

WHEN the doctors API call fails
THE SYSTEM SHALL load and display fallback static doctor data

WHEN displaying the doctors table
THE SYSTEM SHALL left-align doctor names, center-align specialization and contact numbers

---

Calendar Display and Navigation:
WHEN the calendar is rendered
THE SYSTEM SHALL display the month and year label in the format "MONTH YEAR" (e.g., "AUGUST 2025")

WHEN the calendar is rendered
THE SYSTEM SHALL display day headers (Sun, Mon, Tue, Wed, Thu, Fri, Sat) above the calendar grid

WHEN the calendar is rendered
THE SYSTEM SHALL display dates in a 7x6 grid format with proper date numbering using zero-padded format (e.g., "01", "02")

WHEN the calendar displays dates
THE SYSTEM SHALL show date numbers in bold formatting within each calendar cell

WHEN a calendar cell represents a date outside the current month
THE SYSTEM SHALL display the cell as inactive with no background

WHEN a date has a scheduled doctor
THE SYSTEM SHALL display the doctor's name in bold and the time below it within the calendar cell

WHEN a user clicks the previous month button
THE SYSTEM SHALL navigate to the previous month and re-render the calendar

WHEN a user clicks the next month button  
THE SYSTEM SHALL navigate to the next month and re-render the calendar

---

Schedule Management and Edit Functionality:
WHEN a user clicks the "Edit" button
THE SYSTEM SHALL display the edit schedule overlay with an iframe containing edit-sched.html

WHEN the edit schedule overlay is displayed
THE SYSTEM SHALL show a close button (X) in the top-right corner

WHEN a user clicks the close button on the edit overlay
THE SYSTEM SHALL hide the overlay and clear the iframe source

WHEN the edit schedule form is displayed
THE SYSTEM SHALL show form fields for Doctor Name, Date, and Time

WHEN a user submits a valid schedule in the edit form
THE SYSTEM SHALL send a POST request to /schedules endpoint with the schedule data

WHEN a schedule is successfully saved from the edit form
THE SYSTEM SHALL send a "scheduleUpdated" message to the parent window

WHEN the parent window receives a "scheduleUpdated" message
THE SYSTEM SHALL hide the edit overlay and reload the page to refresh the calendar

---

API Integration and Error Handling:
WHEN fetching doctors data from the API fails
THE SYSTEM SHALL log the error to console and fallback to static doctor data

WHEN fetching schedules data from the API fails
THE SYSTEM SHALL log the error to console with message "Failed to load schedules:"

WHEN saving a schedule to the API fails
THE SYSTEM SHALL display an alert with message "Failed to save schedule." and log the error to console

WHEN doctors API responds successfully
THE SYSTEM SHALL render the doctors table with the received data

WHEN schedules API responds successfully  
THE SYSTEM SHALL cache the schedules data and render them on the calendar

---

User Interaction and Accessibility:
WHEN hovering over the profile avatar
THE SYSTEM SHALL apply a scale transformation and enhanced shadow effect

WHEN hovering over navigation items in the sidebar
THE SYSTEM SHALL highlight the item with background color change and color transition

WHEN hovering over doctors table rows
THE SYSTEM SHALL apply a light gray background color for better visibility

WHEN the edit schedule overlay is open
THE SYSTEM SHALL prevent interaction with the underlying page content

WHEN form submission is in progress
THE SYSTEM SHALL prevent double submission through proper event handling