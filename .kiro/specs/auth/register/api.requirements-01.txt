Core Registration:
WHEN a client sends POST request to /api/auth/register with valid role, username, password, fullName, and email in JSON format
THE SYSTEM SHALL validate all required fields, hash the password using bcrypt, create user account, and return HTTP 201 with success message

WHEN a client sends registration request with valid user data
THE SYSTEM SHALL store user information in database with role, username, password (hashed), full_name, and email

WHEN user registration is successful
THE SYSTEM SHALL return HTTP 201 with message "Account created successfully"

---

Request Validation:
WHEN a client sends registration request missing role field
THE SYSTEM SHALL return HTTP 400 with error code REG_MISSING_ROLE and message "Role is required"

WHEN a client sends registration request missing username field
THE SYSTEM SHALL return HTTP 400 with error code REG_MISSING_USERNAME and message "Username is required"

WHEN a client sends registration request missing password field
THE SYSTEM SHALL return HTTP 400 with error code REG_MISSING_PASSWORD and message "Password is required"

WHEN a client sends registration request missing fullName field
THE SYSTEM SHALL return HTTP 400 with error code REG_MISSING_FULLNAME and message "Full name is required"

WHEN a client sends registration request missing email field
THE SYSTEM SHALL return HTTP 400 with error code REG_MISSING_EMAIL and message "Email is required"

WHEN a client sends registration request with malformed email format
THE SYSTEM SHALL return HTTP 400 with error code REG_INVALID_EMAIL and message "Please provide a valid email address"

WHEN a client sends registration request with invalid role value
THE SYSTEM SHALL return HTTP 400 with error code REG_INVALID_ROLE and message "Role must be admin, doctor, or receptionist"

---

Registration Failures:
WHEN a client sends registration request with username that already exists
THE SYSTEM SHALL return HTTP 400 with error code REG_DUPLICATE_USERNAME and message "Username or Email already exists"

WHEN a client sends registration request with email that already exists
THE SYSTEM SHALL return HTTP 400 with error code REG_DUPLICATE_EMAIL and message "Username or Email already exists"

WHEN registration fails due to database constraints
THE SYSTEM SHALL return HTTP 400 with error code REG_DUPLICATE_ENTRY and message "Username or Email already exists"

WHEN registration fails due to server error
THE SYSTEM SHALL return HTTP 500 with error code REG_SERVER_ERROR and message "Server error"

---

Security Requirements:
THE SYSTEM SHALL hash all passwords using bcrypt with minimum 10 rounds before storing in database
THE SYSTEM SHALL never log or store passwords in plaintext anywhere in the system
THE SYSTEM SHALL require HTTPS for all registration endpoints
THE SYSTEM SHALL validate that role field contains only allowed values: admin, doctor, receptionist
THE SYSTEM SHALL ensure username and email are unique in the database
THE SYSTEM SHALL log registration attempts with timestamp for audit purposes