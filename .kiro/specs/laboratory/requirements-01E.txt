Laboratory Page Display and Navigation:
WHEN a user navigates to the laboratory page 
THE SYSTEM SHALL display the laboratory interface with navigation sidebar, main content area with lab results table, and "Add Lab Test" button

WHEN the laboratory page loads 
THE SYSTEM SHALL display user profile information in the top navbar showing username, role, and profile avatar

WHEN the laboratory page is displayed 
THE SYSTEM SHALL show the sidebar navigation with Dashboard, Appointments, Patients, Laboratory (active), Prescriptions, and Doctors menu items

WHEN a user clicks on any sidebar navigation item 
THE SYSTEM SHALL navigate to the corresponding page

WHEN the laboratory page loads 
THE SYSTEM SHALL set the Laboratory menu item as active with distinctive styling

---

Lab Results Table Display:
WHEN the laboratory page loads 
THE SYSTEM SHALL display a table with columns for Patient #, Patient's Name, Status, and Results

WHEN lab data is retrieved from the API 
THE SYSTEM SHALL populate the table with patient lab information showing most recent entries first

WHEN displaying patient names in the table 
THE SYSTEM SHALL format names in proper title case (first letter of each word capitalized)

WHEN no lab results are available 
THE SYSTEM SHALL display an empty table with column headers

WHEN lab results contain multiple tests for the same patient 
THE SYSTEM SHALL group them and show overall status (Pending if any test is pending, Complete if all tests are complete)

---

Add Lab Test Functionality:
WHEN a user clicks the "Add Lab Test" button 
THE SYSTEM SHALL open a modal overlay containing the lab request form

WHEN the lab request form modal is opened 
THE SYSTEM SHALL load the lab-request-form.html page in an iframe within the modal

WHEN the lab request form is successfully submitted 
THE SYSTEM SHALL close the modal, refresh the lab results table, and display a success toast message

WHEN a user clicks the close button on the lab request modal 
THE SYSTEM SHALL close the modal and clear the iframe source

---

Lab Test Results Viewing:
WHEN a user clicks the "View" button for a patient in the results table 
THE SYSTEM SHALL open a detailed lab tests modal showing all lab tests for that patient

WHEN the lab tests modal is displayed 
THE SYSTEM SHALL show patient header information (Patient # and Patient's Name) and a table of lab tests

WHEN displaying lab tests in the modal 
THE SYSTEM SHALL show columns for Lab Test (with test group and names), Date, Status, and Results with action buttons

WHEN lab tests have different statuses 
THE SYSTEM SHALL display appropriate action buttons: "View" and "Edit" for completed tests, "Add Result" and "Cancel" for pending tests

WHEN no tests are available for a patient 
THE SYSTEM SHALL display "No test results available" message in the modal table

---

Lab Test Result Management:
WHEN a user clicks "Add Result" button for a pending test 
THE SYSTEM SHALL open the appropriate lab form (urinalysis, blood chemistry, hematology, serology) based on the test type in read-write mode

WHEN a user clicks "View" button for a completed test 
THE SYSTEM SHALL open the corresponding lab form in read-only mode showing the saved results

WHEN a user clicks "Edit" button for a completed test 
THE SYSTEM SHALL open the corresponding lab form in edit mode allowing result modifications

WHEN a user clicks "Cancel" button for a pending test 
THE SYSTEM SHALL display a confirmation modal asking "Are you sure you want to cancel this lab test?"

WHEN a user confirms test cancellation 
THE SYSTEM SHALL update the test status to "Canceled" and close the confirmation modal

WHEN a user clicks "No" on the cancellation confirmation 
THE SYSTEM SHALL close the confirmation modal without making changes

---

Lab Form Integration:
WHEN opening a lab form for urinalysis tests 
THE SYSTEM SHALL load urinalysis.html in the overlay iframe

WHEN opening a lab form for blood chemistry tests 
THE SYSTEM SHALL load blood-chemistry.html in the overlay iframe

WHEN opening a lab form for hematology tests (CBC) 
THE SYSTEM SHALL load hematology.html in the overlay iframe

WHEN opening a lab form for serology tests 
THE SYSTEM SHALL load serology-immunology.html in the overlay iframe

WHEN opening a lab form for fecalysis tests 
THE SYSTEM SHALL load fecalysis.html in the overlay iframe

WHEN a lab form is loaded in the overlay 
THE SYSTEM SHALL pass patient information, test details, and read-only/edit mode settings to the form via postMessage

---

Modal Management:
WHEN a lab form is successfully submitted with results 
THE SYSTEM SHALL close the lab overlay, refresh the lab tests modal with updated data, and refresh the main lab results table

WHEN returning from viewing a completed test 
THE SYSTEM SHALL reopen the lab tests modal to maintain user context

WHEN returning from editing a test 
THE SYSTEM SHALL refresh the main lab results table and close the lab tests modal

WHEN returning from adding results to a test 
THE SYSTEM SHALL refresh both the lab tests modal in place and the main lab results table

WHEN any modal operation completes with success 
THE SYSTEM SHALL display a success toast message at the top of the page

---

Status Management:
WHEN determining overall patient status in the main table 
THE SYSTEM SHALL show "Pending" if any associated test is pending, otherwise show "Complete" if all tests are complete

WHEN a test result is successfully added or updated 
THE SYSTEM SHALL update the test status to "Complete"

WHEN displaying test status in the lab tests modal 
THE SYSTEM SHALL show the individual status of each test (Pending, Complete, or Canceled)

WHEN lab request status is updated via API 
THE SYSTEM SHALL reflect the status change immediately in both the main table and any open modals

---

User Authentication and Profile:
WHEN the laboratory page loads 
THE SYSTEM SHALL retrieve and display the logged-in user's role and username from localStorage

WHEN displaying the user profile avatar 
THE SYSTEM SHALL show the first letter of the username in a colored circle with consistent color assignment based on username hash

WHEN a user clicks the profile avatar 
THE SYSTEM SHALL display a dropdown menu with "Settings" and "Logout" options

WHEN a user clicks "Logout" from the profile dropdown 
THE SYSTEM SHALL clear authentication data from localStorage and redirect to login.html

WHEN an admin user accesses the laboratory page 
THE SYSTEM SHALL add an "Accounts" menu item to the sidebar navigation

---

API Integration and Error Handling:
WHEN the laboratory page loads 
THE SYSTEM SHALL fetch lab requests from the /api/lab_requests endpoint

WHEN the lab requests API call fails 
THE SYSTEM SHALL log the error to console and handle gracefully without breaking the interface

WHEN lab data is successfully retrieved 
THE SYSTEM SHALL process and group the data by patient_id and render it in the results table

WHEN updating lab request results 
THE SYSTEM SHALL send PUT requests to /api/lab_requests/:patientId/:requestDate endpoint

WHEN API operations complete successfully 
THE SYSTEM SHALL refresh relevant UI components to reflect the updated data

WHEN network errors occur 
THE SYSTEM SHALL handle errors gracefully and maintain interface functionality

---

URL Parameter Handling:
WHEN the laboratory page is accessed with openModal parameter 
THE SYSTEM SHALL automatically open the lab tests modal for the specified patient

WHEN the laboratory page is accessed with testType and readOnly parameters 
THE SYSTEM SHALL directly open the specified lab form overlay in view mode

WHEN URL parameters are processed 
THE SYSTEM SHALL decode patient names and handle special characters properly

WHEN opening modals or overlays from URL parameters 
THE SYSTEM SHALL wait for the main page to load before triggering the modal operations

---

Responsive Design and Accessibility:
WHEN the laboratory page is viewed on mobile devices 
THE SYSTEM SHALL adapt the layout with collapsible sidebar and responsive table design

WHEN table content exceeds available width 
THE SYSTEM SHALL handle text overflow with ellipsis and maintain readability

WHEN modals are displayed 
THE SYSTEM SHALL center them on screen and provide proper close button positioning

WHEN toast messages are shown 
THE SYSTEM SHALL display them at the top center of the page with fade in/out animations

WHEN keyboard navigation is used 
THE SYSTEM SHALL support proper tab order and keyboard accessibility for interactive elements