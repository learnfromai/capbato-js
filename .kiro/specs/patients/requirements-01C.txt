Page Display and Layout:
WHEN a user navigates to the patients page
THE SYSTEM SHALL display the main layout with header, sidebar navigation, and main content area

WHEN the patients page loads
THE SYSTEM SHALL display the page title "Patient Records" centered in the header area

WHEN the patients page is displayed
THE SYSTEM SHALL show an "Add New Patient" button positioned on the right side of the header area with a user-plus icon

WHEN the patients page is displayed
THE SYSTEM SHALL include a search bar with placeholder text "Search patients..." above the patient table

WHEN the patients page is displayed
THE SYSTEM SHALL display a table with column headers "Patient #" and "Patient's Name"

---

User Authentication and Profile Management:
WHEN the patients page loads
THE SYSTEM SHALL display the logged-in user's role in uppercase and username from localStorage in the header area

WHEN the patients page loads and user has admin role
THE SYSTEM SHALL dynamically add an "Accounts" menu item to the sidebar navigation

WHEN the patients page loads
THE SYSTEM SHALL display a profile avatar with the first letter of the username and a randomly assigned consistent color

WHEN a user clicks the profile avatar
THE SYSTEM SHALL display a dropdown menu with "Settings" and "Logout" options

WHEN a user clicks "Logout" from the profile dropdown
THE SYSTEM SHALL clear localStorage data and redirect to login.html

---

Patient Data Loading and Display:
WHEN the patients page loads
THE SYSTEM SHALL fetch patient data from the /patients API endpoint

WHEN patient data is successfully loaded
THE SYSTEM SHALL display patients in a table with Patient ID and formatted full name (First Middle Last)

WHEN displaying patient names
THE SYSTEM SHALL format names to title case for display (capitalize first letter of each word)

WHEN no patients are found or returned from the API
THE SYSTEM SHALL display "No patients found." message in the table body spanning both columns

WHEN patient data fails to load
THE SYSTEM SHALL log the error to console with message "Error fetching data:"

WHEN displaying patient names in the table
THE SYSTEM SHALL create clickable links that navigate to patientInfo.html with patient_id parameter

---

Search Functionality:
WHEN a user types in the search input field
THE SYSTEM SHALL filter the patient list in real-time without requiring a submit action

WHEN performing search
THE SYSTEM SHALL search across Patient ID and full name fields (FirstName, MiddleName, LastName)

WHEN search text is entered
THE SYSTEM SHALL perform case-insensitive matching on patient data

WHEN search results are filtered
THE SYSTEM SHALL update the table display to show only matching patients

WHEN search input is cleared
THE SYSTEM SHALL restore the full patient list display

---

Navigation and User Actions:
WHEN a user clicks the "Add New Patient" button
THE SYSTEM SHALL navigate to add-new-patient.html page

WHEN a user clicks on a patient name link in the table
THE SYSTEM SHALL navigate to patientInfo.html with the patient_id as URL parameter

WHEN a user clicks sidebar navigation items
THE SYSTEM SHALL navigate to the corresponding pages (Dashboard: index.html, Appointments: appointments.html, Laboratory: laboratory.html, Prescriptions: prescriptions.html, Doctors: doctor-schedule.html)

WHEN a user clicks the "Patients" sidebar item
THE SYSTEM SHALL remain on the current patients.html page (active state)

---

Data Structure and Formatting:
WHEN processing patient data from the API
THE SYSTEM SHALL handle patient records with PatientID, FirstName, MiddleName, LastName, and DateOfBirth fields

WHEN displaying patient information
THE SYSTEM SHALL construct full names by concatenating First + Middle (if present) + Last names with proper spacing

WHEN patient data contains empty or null middle names
THE SYSTEM SHALL handle gracefully without showing extra spaces in the display name

WHEN sorting patient data
THE SYSTEM SHALL order patients alphabetically by last name ascending

---

Visual Design and Styling:
WHEN the patients page is displayed
THE SYSTEM SHALL apply a gradient background (blue to teal) with blur effect

WHEN displaying the patient table
THE SYSTEM SHALL use alternating row styling with proper spacing and borders

WHEN a user hovers over patient name links
THE SYSTEM SHALL change text color to gray to indicate clickable state

WHEN displaying the "Add New Patient" button
THE SYSTEM SHALL use teal background color (#4db6ac) with white text and shadow effect

WHEN a user hovers over the "Add New Patient" button
THE SYSTEM SHALL darken the background color and slightly scale up the button

---

Error Handling and Edge Cases:
WHEN the API request to /patients endpoint fails
THE SYSTEM SHALL catch the error and log it to console without breaking the page functionality

WHEN patient data is undefined or not an array
THE SYSTEM SHALL handle gracefully and display "No patients found." message

WHEN formatting names with missing data
THE SYSTEM SHALL handle null or undefined name fields without displaying "null" or "undefined" text

WHEN localStorage lacks required user authentication data
THE SYSTEM SHALL still load the page but display empty strings for missing role/username information